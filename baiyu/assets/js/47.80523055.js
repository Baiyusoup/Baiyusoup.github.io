(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{641:function(t,e,r){"use strict";r.r(e);var a=r(5),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"floyd判圈算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#floyd判圈算法"}},[t._v("#")]),t._v(" Floyd判圈算法")]),t._v(" "),r("p",[t._v("Floyd判圈算法，又称龟兔赛跑算法(Tortoise and Hare Algorithm)，是一个可以在有限状态机、迭代函数或者链表上判断是否存在环，求出该环的起点与长度的算法。")]),t._v(" "),r("p",[t._v("假设有环，那么设两个快慢指针。两者相遇时，让其中一个指针留在相遇节点，另一个指针返回出发点，此时两者之间距离为环长度的整数倍。然后再次让两者同速前进，当两者再次相遇时，所在的节点为环的起点。")]),t._v(" "),r("h2",{attrs:{id:"证明"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#证明"}},[t._v("#")]),t._v(" 证明")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/9b6a9bf31144",target:"_blank",rel:"noopener noreferrer"}},[t._v("GO"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"练手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#练手"}},[t._v("#")]),t._v(" 练手")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle-lcci/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GO"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=s.exports}}]);